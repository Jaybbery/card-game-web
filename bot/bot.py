from telegram import Update, InlineKeyboardButton, InlineKeyboardMarkup
from telegram.ext import Application, CommandHandler, ContextTypes, MessageHandler, filters
import sqlite3
import random
import logging

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏
TOKEN = "7605688003:AAFXEMP4iRDdSJSqpBBcWU66WWnUQ42Quh8"
DB_NAME = "cards.db"

# –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ë–î
conn = sqlite3.connect(DB_NAME)
cursor = conn.cursor()
cursor.execute('''CREATE TABLE IF NOT EXISTS users (
    user_id INTEGER PRIMARY KEY,
    coins INTEGER DEFAULT 100
)''')
cursor.execute('''CREATE TABLE IF NOT EXISTS cards (
    card_id INTEGER PRIMARY KEY,
    user_id INTEGER,
    name TEXT,
    image_url TEXT
)''')
conn.commit()

# –í–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user = update.effective_user
    await update.message.reply_text(
        "üéÆ –û—Ç–∫—Ä—ã—Ç—å –∏–≥—Ä—É",
        reply_markup=InlineKeyboardMarkup([[
            InlineKeyboardButton(
                "–ò–≥—Ä–∞—Ç—å", 
                web_app={"url": "https://jaybbery.github.io/card-game-web/"}  # –°—Å—ã–ª–∫–∞ –Ω–∞ –≤–∞—à–µ –≤–µ–±-–ø—Ä–∏–ª–æ–∂–µ–Ω–∏–µ
            )
        ]])
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –¥–∞–Ω–Ω—ã—Ö –∏–∑ Web App
async def handle_web_app_data(update: Update, context: ContextTypes.DEFAULT_TYPE):
    data = json.loads(update.message.web_app_data.data)
    user_id = update.effective_user.id

    if data.get("action") == "open_booster":
        # –õ–æ–≥–∏–∫–∞ –æ—Ç–∫—Ä—ã—Ç–∏—è –±—É—Å—Ç–µ—Ä–∞
        new_card_id = random.randint(1000, 9999)
        cursor.execute('INSERT INTO cards (user_id, name) VALUES (?, ?)', (user_id, f"–ö–∞—Ä—Ç–∞ #{new_card_id}"))
        conn.commit()
        await update.message.reply_text(f"üéâ –í—ã –ø–æ–ª—É—á–∏–ª–∏ –∫–∞—Ä—Ç—É #{new_card_id}!")

def main():
    app = Application.builder().token(TOKEN).build()
    app.add_handler(CommandHandler("start", start))
    app.add_handler(MessageHandler(filters.StatusUpdate.WEB_APP_DATA, handle_web_app_data))
    app.run_polling()

if __name__ == "__main__":
    main()
